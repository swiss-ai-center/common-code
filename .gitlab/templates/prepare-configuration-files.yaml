.prepare-configuration-files: &prepare-configuration-files
  stage: deploy
  script:
    - cd $CI_PROJECT_DIR
    - cd $WORKDIR
    # Install yq
    - apt update && apt install -y wget gettext
    - wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
    - chmod +x /usr/local/bin/yq
    # Switch to kubernetes directory
    - cd kubernetes
    # Prepare configuration files
    - |
      # Set service configuration (ConfigMap)
      yq -i ".metadata.name = \"${SERVICE_NAME}-config\"" config-map.yml
      yq -i ".metadata.labels.app = \"${SERVICE_NAME}\"" config-map.yml
      yq -i '.data = (.data | to_entries | map({"key": .key, "value": "${" + .key + "}"}) | from_entries)' config-map.yml
      envsubst < config-map.yml > new-config-map.yml
      mv new-config-map.yml config-map.yml

      # Set service configuration (Ingress)
      yq -i ".metadata.name = \"${SERVICE_NAME}-ingress\"" ingress.yml
      yq -i ".spec.rules[0].host = \"${SERVICE_URL#*://}\"" ingress.yml
      yq -i ".spec.rules[0].http.paths[0].backend.service.name = \"${SERVICE_NAME}-service\"" ingress.yml
      yq -i ".spec.tls[0].hosts[0] = \"${SERVICE_URL#*://}\"" ingress.yml
      # replace . with - in service url and add -tls-cert at the end
      SECRET_NAME=$(echo "${SERVICE_URL#*://}" | sed 's/\./-/g' | sed 's/$/-tls-cert/')
      yq -i ".spec.tls[0].secretName = \"$SECRET_NAME\"" ingress.yml

      # Set service configuration (Service)
      yq -i ".metadata.name = \"${SERVICE_NAME}-service\"" service.yml
      yq -i ".spec.selector.app = \"${SERVICE_NAME}\"" service.yml

      # Set service configuration (StatefulSet)
      yq -i ".metadata.name = \"${SERVICE_NAME}-stateful\"" stateful.yml
      yq -i ".metadata.labels.app = \"${SERVICE_NAME}\"" stateful.yml
      yq -i ".spec.serviceName = \"${SERVICE_NAME}\"" stateful.yml
      yq -i ".spec.selector.matchLabels.app = \"${SERVICE_NAME}\"" stateful.yml
      yq -i ".spec.template.metadata.labels.app = \"${SERVICE_NAME}\"" stateful.yml
      yq -i ".spec.template.spec.containers[0].name = \"${SERVICE_NAME}\"" stateful.yml
      yq -i ".spec.template.spec.containers[0].image = \"${DOCKER_IMAGE_NAME}:${CI_COMMIT_SHA}\"" stateful.yml
      yq -i ".spec.template.spec.containers[0].envFrom[0].configMapRef.name = \"${SERVICE_NAME}-config\"" stateful.yml
      # add registry secret to pull image from private registry
      yq -i ".spec.template.spec.imagePullSecrets[0].name = \"${IMAGE_PULL_SECRET_NAME}\"" stateful.yml
